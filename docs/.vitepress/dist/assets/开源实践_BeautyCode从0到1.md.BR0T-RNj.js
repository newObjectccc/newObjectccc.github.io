import{_ as e,c as a,o as t,a4 as c}from"./chunks/framework.nQaBHiNx.js";const u=JSON.parse('{"title":"开源实践（VS Code Extension）","description":"","frontmatter":{},"headers":[],"relativePath":"开源实践/BeautyCode从0到1.md","filePath":"开源实践/BeautyCode从0到1.md"}'),i={name:"开源实践/BeautyCode从0到1.md"},o=c('<h1 id="开源实践-vs-code-extension" tabindex="-1">开源实践（VS Code Extension） <a class="header-anchor" href="#开源实践-vs-code-extension" aria-label="Permalink to &quot;开源实践（VS Code Extension）&quot;">​</a></h1><h2 id="vscode-extension-beautycode-的从0到1过程" tabindex="-1">VSCode Extension BeautyCode 的从0到1过程 <a class="header-anchor" href="#vscode-extension-beautycode-的从0到1过程" aria-label="Permalink to &quot;VSCode Extension BeautyCode 的从0到1过程&quot;">​</a></h2><blockquote><p>开源实践系列是为了记录笔者的每一个开源项目的实践过程，希望能给一些准备入门开源实践的小伙伴一些浅浅的帮助。</p></blockquote><p>因为都是开源实践的历程回顾，每一个开源实践我基本都会以以下结构来进行记录：</p><ol><li><em>项目的初衷和背景</em></li><li><em>项目规划和准备阶段</em></li><li><em>项目的创建和初始化</em></li><li><em>功能开发和迭代</em></li><li><em>社区参与和反馈</em></li><li><em>总结和展望</em></li></ol><h3 id="正文开始👉" tabindex="-1">正文开始👉 <a class="header-anchor" href="#正文开始👉" aria-label="Permalink to &quot;正文开始👉&quot;">​</a></h3><p><a href="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/9785a6a8-4c62-4ba3-a789-a33ddb25f09d" target="_blank" rel="noreferrer">a162cd02-155b-4fd7-89dc-4a5843637e58.webm</a></p><p>【在VSCode中导出漂亮的代码图！】 <a href="https://www.bilibili.com/video/BV16w4m1d7et/?share_source=copy_web&amp;vd_source=0ce418657874272e878c4389ba86cc13" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV16w4m1d7et/?share_source=copy_web&amp;vd_source=0ce418657874272e878c4389ba86cc13</a></p><hr><h4 id="_1-项目的初衷和背景📌" tabindex="-1">1. <em>项目的初衷和背景</em>📌 <a class="header-anchor" href="#_1-项目的初衷和背景📌" aria-label="Permalink to &quot;1. *项目的初衷和背景*📌&quot;">​</a></h4><p>我写这个插件的灵感是来源于Carbon和Shiki，初衷是因为Carbon是网页版本，需要我把代码粘贴到网页，并且有一些收费主题，免费的主题也不是很好看，于是我打算自己写一个。</p><p>这是Carbon的：</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/a85d1659-6a6e-4ea5-b12a-0e8098ca43e1" alt="image"></p><h4 id="_2-项目规划和准备阶段📌" tabindex="-1">2. <em>项目规划和准备阶段</em>📌 <a class="header-anchor" href="#_2-项目规划和准备阶段📌" aria-label="Permalink to &quot;2. *项目规划和准备阶段*📌&quot;">​</a></h4><p>开发VSCode Extension需要的准备其实也很简单：</p><ol><li><p>web前端工程师一名，（如果你的插件需要和后端交互）全栈工程师会更好。</p></li><li><p>VSCode Extension 开发文档。<a href="https://vscode-use-docs.netlify.app/" target="_blank" rel="noreferrer">基于VSCode的一些API的开源封装，作者也是一个厉害的开源大佬</a></p></li><li><p>初步了解Mpackage.json及VSCode Extension App项目配置。<a href="https://github.com/newObjectccc/vscode-extension-boilerplate" target="_blank" rel="noreferrer">适合初学者的VSC插件模板</a></p></li><li><p>知道怎么在VSCode中运行插件调试窗口。</p><ul><li><code>F5</code>开启debug模式即可，<code>vscode-extension-boilerplate</code>的<code>.vscode</code>文件中已经配置好了。</li></ul></li><li><p>知道如何调试你的插件。</p><ul><li>这里是以<code>vscode-extension-boilerplate</code>为例：</li></ul><p>在F5开始debug模式之后，弹出的vsc窗口中点击帮助菜单</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/96f65559-9b49-4271-ba46-ce45655b03fb" alt="image"></p><p>在弹出的菜单里选择<code>Toggle Developer Tools</code></p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/c723a174-7839-4944-b98a-0ac63d9c5775" alt="image"></p><p>然后弹出的调试页面想必不用我多介绍了吧，各位应该非常熟悉了（Linux用户应该是直接在窗口右边展示，功能一样的）</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/0f6331eb-d111-4363-9ccd-e11e6f37f0d8" alt="image"></p></li></ol><h4 id="_3-项目的创建和初始化📌" tabindex="-1">3. <em>项目的创建和初始化</em>📌 <a class="header-anchor" href="#_3-项目的创建和初始化📌" aria-label="Permalink to &quot;3. *项目的创建和初始化*📌&quot;">​</a></h4><p>以下我都是以<code>vscode-extension-boilerplate</code>为例，因为他足够简单，开箱即用，非常适合入门。</p><p>环境要求：</p><ul><li>node &gt;= 20</li><li>pnpm &gt;= 8</li></ul><p>开始使用：</p><ol><li>git clone <a href="https://github.com/newObjectccc/vscode-extension-boilerplate.git" target="_blank" rel="noreferrer">https://github.com/newObjectccc/vscode-extension-boilerplate.git</a></li><li>pnpm install （特别注意，在你打包你的vsc插件之前，请用npm install，或者pnpm recursive-install，详情请自行了解pnpm和npm在安装依赖上的区别）</li><li>pnpm watch 或者 F5</li></ol><h4 id="_4-功能开发和迭代📌" tabindex="-1">4. <em>功能开发和迭代</em>📌 <a class="header-anchor" href="#_4-功能开发和迭代📌" aria-label="Permalink to &quot;4. *功能开发和迭代*📌&quot;">​</a></h4><p>这个插件的功能很简单，我只想要一个不用离开VSCode就可以导出漂亮的代码块，最好能支持多个语言和多个主题，梳理一下之后我需要完成以下功能点。</p><ul><li><p>注册一个生成代码块的命令：</p><p>package.json中声明commands和keybindings</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/d82cead5-4aae-474d-950b-1e52a401b68b" alt="image"></p><p>vsc程序内注册命令</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/d5b80c40-89fd-4dc1-ad3b-5077dd07a655" alt="image"></p></li><li><p>从用户编辑区的选中，获取代码，当前语言：</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/725ad460-1aac-4043-aa0d-0d0c0023e43c" alt="image"></p></li><li><p>打开新窗口，根据选中代码生成代码块预览：</p><p>这里我创建了一个新的webview窗口，加载了我src目录下的webview.html文件</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/bc194260-3382-4b9f-bf68-361df9477b46" alt="image"></p><p>这里需要打通extension和webview的通信，首先在extension.ts中监听webview的postMessage事件</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/25078818-fa56-46d5-bbb1-1fc8aa0f3a31" alt="image"></p><p>然后在webview.html中监听postMessage事件（因为我是当webview.html页面的onload回调中，发送事件给extension，由extension处理，传给webview选中的代码，当前语言等信息）</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/dbcd0970-3c04-458a-aa63-f6b13ac946c8" alt="image"></p></li><li><p>切换主题和语言：</p><p>Shiki内置了非常多的编程语言代码高亮和主题，只需要拿出来遍历即可</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/3074e5ea-3242-4623-b0ab-e9a3beb561a9" alt="image"></p></li><li><p>导出图片：</p><p>导出功能直接使用了html2canvas</p><p><img src="https://github.com/newObjectccc/newObjectccc.github.io/assets/42132586/23d364a8-497c-4454-8e56-cca8040f5379" alt="image"></p></li></ul><h5 id="踩坑" tabindex="-1">踩坑 <a class="header-anchor" href="#踩坑" aria-label="Permalink to &quot;踩坑&quot;">​</a></h5><p>一开始我给代码块外围增加了box-shadow，但是在导出的时候，我发现box-shadow并不能被正确导出，想看看issue有没有解决方案，只是800+的issues，筛选出来40+个，看了之后都没解决，于是想自己fork下来debug，但是看了没有阴影的效果之后还是觉得其实也不错了，毕竟我是个大懒逼啊~</p><p><a href="https://github.com/niklasvh/html2canvas/issues/2972" target="_blank" rel="noreferrer">html2canvas/issues #2972</a></p><h5 id="迭代想法的萌生" tabindex="-1">迭代想法的萌生 <a class="header-anchor" href="#迭代想法的萌生" aria-label="Permalink to &quot;迭代想法的萌生&quot;">​</a></h5><p>这里记录一下我在开发中蹦出来的一些想法，虽然也被我否了。。。</p><ul><li>代码块周边透明度自定义？（50%刚刚好，感觉没必要给个自定义了。。。本来我就懒！）</li><li>代码区域是否可编辑？（本来就在vscode内部，感觉有点鸡肋）</li><li>是否可以支持多种字体？（字体文件一般不小，且好看的也收费，所以我当时就否了）</li></ul><h4 id="_5-社区参与和反馈📌" tabindex="-1">5. <em>社区参与和反馈</em>📌 <a class="header-anchor" href="#_5-社区参与和反馈📌" aria-label="Permalink to &quot;5. *社区参与和反馈*📌&quot;">​</a></h4><p>开源且免费是因为，我不希望<code>Carbon</code>收费，所以我自然也不收费，开源是为了给社区贡献一点点的VSCode入门知识。</p><ul><li>于是我声明了<code>MIT</code>开源协议。</li></ul><h4 id="_6-总结和展望📌" tabindex="-1">6. <em>总结和展望</em>📌 <a class="header-anchor" href="#_6-总结和展望📌" aria-label="Permalink to &quot;6. *总结和展望*📌&quot;">​</a></h4><p>开源社区是每一个程序员都应该参与共建的，我也希望我在力所能及的地方，贡献自己一点微薄的力量，同时也能不停的磨砺自己，在开源社区留下自己的代码，也让我感受到一丝生命的意义。</p><p>最后贴上我的开源偶像:</p><p><a href="https://github.com/sindresorhus" target="_blank" rel="noreferrer"><img src="https://github.com/sindresorhus.png?size=50" alt="Sindre Sorhus"></a><a href="https://github.com/sindresorhus" target="_blank" rel="noreferrer">Sindre Sorhus</a></p>',38),s=[o];function l(r,n,p,b,d,h){return t(),a("div",null,s)}const g=e(i,[["render",l]]);export{u as __pageData,g as default};
